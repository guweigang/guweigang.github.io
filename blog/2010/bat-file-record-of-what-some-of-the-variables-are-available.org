#+TITLE: 记录一下bat文件中可用的一些变量
#+AUTHOR: Gu Weigang
#+EMAIL: guweigang@outlook.com
#+DATE: 2010-07-14 Wed
#+URI: /blog/2010/07/14/bat-file-record-of-what-some-of-the-variables-are-available/
#+KEYWORDS: 
#+TAGS: bat, variable, windows
#+LANGUAGE: zh_CN
#+OPTIONS: H:3 num:nil toc:nil \n:nil ::t |:t ^:nil -:nil f:t *:t <:t
#+DESCRIPTION: 

在bat文件中有很多可以用的变量，如：获取当前路径，获取当前文件名。。。
In addition, substitution of FOR variable references has been enhanced.
You can now use the following optional syntax:



#+BEGIN_EXAMPLE
    
    %~I         - expands %I removing any surrounding quotes (")
    %~fI        - expands %I to a fully qualified path name
    %~dI        - expands %I to a drive letter only
    %~pI        - expands %I to a path only
    %~nI        - expands %I to a file name only
    %~xI        - expands %I to a file extension only
    %~sI        - expanded path contains short names only
    %~aI        - expands %I to file attributes of file
    %~tI        - expands %I to date/time of file
    %~zI        - expands %I to size of file
    %~$PATH:I   - searches the directories listed in the PATH
                   environment variable and expands %I to the
                   fully qualified name of the first one found.
                   If the environment variable name is not
                   defined or the file is not found by the
                   search, then this modifier expands to the
                   empty string

#+END_EXAMPLE


The modifiers can be combined to get compound results:


#+BEGIN_EXAMPLE
    
    %~dpI       - expands %I to a drive letter and path only
    %~nxI       - expands %I to a file name and extension only
    %~fsI       - expands %I to a full path name with short names only
    %~dp$PATH:I - searches the directories listed in the PATH
                   environment variable for %I and expands to the
                   drive letter and path of the first one found.
    %~ftzaI     - expands %I to a DIR like output line

#+END_EXAMPLE


In the above examples %I and PATH can be replaced by other valid
values. The %~ syntax is terminated by a valid FOR variable name.
Picking upper case variable names like %I makes it more readable and
avoids confusion with the modifiers, which are not case sensitive.


