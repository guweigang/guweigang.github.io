#+TITLE: PHP浮点数比较不准的解决方法
#+AUTHOR: Gu Weigang
#+EMAIL: guweigang@outlook.com
#+DATE: 2011-07-18 Mon
#+URI: /blog/2011/07/18/php-floating-point-comparison-allowed-solutions/
#+KEYWORDS: 
#+TAGS: 
#+LANGUAGE: zh_CN
#+OPTIONS: H:3 num:nil toc:nil \n:nil ::t |:t ^:nil -:nil f:t *:t <:t
#+DESCRIPTION: 

首先看一段代码:


#+BEGIN_EXAMPLE
    
 $a = 0.1;
$b = 0.7;
var_dump(($a + $b) == 0.8);

#+END_EXAMPLE


打印出来的值居然为 boolean false

这是为啥?PHP手册对于浮点数有以下警告信息:

Warning
浮点数精度
显然简单的十进制分数如同 0.1 或 0.7 不能在不丢失一点点精度的情况下转换为内部二进制的格式。这就会造成混乱的结果：例如，floor((0.1+0.7)*10) 通常会返回 7 而不是预期中的 8，因为该结果内部的表示其实是类似 7.9999999999...。

这和一个事实有关，那就是不可能精确的用有限位数表达某些十进制分数。例如，十进制的 1/3 变成了 0.3333333. . .。

所以永远不要相信浮点数结果精确到了最后一位，也永远不要比较两个浮点数是否相等。如果确实需要更高的精度，应该使用任意精度数学函数或者 gmp 函数

那么上面的算式我们应该改写为


#+BEGIN_EXAMPLE
    
 $a = 0.1;
$b = 0.7;
var_dump(bcadd($a,$b,2) == 0.8);

#+END_EXAMPLE


这样就能解决浮点数的计算问题了


